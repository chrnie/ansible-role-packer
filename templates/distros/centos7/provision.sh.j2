#!/bin/bash

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
BLINK='\e[5;32;40m'
NB='\e[m'   # No Blink
NC='\033[0m' # No Color

printf "Provisioner bash example..."
sleep 1
printf "${GREEN}${BLINK}running${NC}${NB}"
echo


# sudo without password
sed -i 's/^%wheel/## wheel/g' /etc/sudoers
sed -i 's/^# %wheel/%wheel/g' /etc/sudoers

# copy default network config for nat on eth0

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth0
TYPE=Ethernet
BOOTPROTO=none
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=eth0
DEVICE=eth0
ONBOOT=yes
IPADDR={{ packer_centos7_network_ip }}
PREFIX=24
GATEWAY={{ packer_centos7_network_gateway }}
DNS1={{ packer_centos7_network_dns }}
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_PRIVACY=no

EOF

# add a first user
if ! grep {{ packer_ansible_user }} /etc/passwd > /dev/null; then
  useradd {{ packer_ansible_user }} -G wheel -u 1043 -m
fi 

if [ ! -d /home/{{ packer_ansible_user }}/.ssh ]; then
  mkdir /home/{{ packer_ansible_user }}/.ssh
fi
echo '{{ packer_authorized_key }}' > /home/{{ packer_ansible_user }}/.ssh/authorized_keys
chown -R {{ packer_ansible_user }}:{{ packer_ansible_user }} /home/{{ packer_ansible_user }}/.ssh

# don't permit root access after provisioning
sed -i 's/^#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config

